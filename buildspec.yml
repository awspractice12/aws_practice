version: 0.2

#env:
  #variables:
     # key: "value"
     # key: "value"
  #parameter-store:
     # key: "value"
     # key: "value"
  #secrets-manager:
     # key: secret-id:json-key:version-stage:version-id
     # key: secret-id:json-key:version-stage:version-id
  #exported-variables:
     # - variable
     # - variable
  #git-credential-helper: yes

phases:
  #install:
    #If you use the Ubuntu standard image 2.0 or later, you must specify runtime-versions.
    #If you specify runtime-versions and use an image other than Ubuntu standard image 2.0, the build fails.
    #runtime-versions:
      # name: version
      # name: version
    #commands:
      # - command
      # - command
  pre_build:
    commands:
      - echo 'Logging into AWS'
      - aws --version
      - REPOSITORY_URI=732631625641.dkr.ecr.us-east-2.amazonaws.com/ss-cloud-poc-container-repo
#      - $(aws ecr get-login --region us-east-2 --registry-ids 732631625641)
#      - $(aws ecr get-login-password --region us-east-2)
#      - aws ecr get-authorization-token  --region us-east-2 | sed 's|https://||'
      - aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin $REPOSITORY_URI
  build:
    commands:
      - cd java-micro-service-projects
      - mvn install
      - cd account-service
      - docker build . -t $REPOSITORY_URI/user/account-service:1.0
      - docker push       $REPOSITORY_URI/user/account-service:1.0
      # - command
  #post_build:
    #commands:
      # - command
      # - command
#reports:
  #report-name-or-arn:
    #files:
      # - location
      # - location
    #base-directory: location
    #discard-paths: yes
    #file-format: JunitXml | CucumberJson
#artifacts:
  #files:
    # - location
    # - location
  #name: $(date +%Y-%m-%d)
  #discard-paths: yes
  #base-directory: location
#cache:
  #paths:
    # - paths
